name: Deploy to GCP Cloud Run

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Authenticate with GCP
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # -------------------------------
      # BACKEND: Build & Deploy to Cloud Run
      # -------------------------------
      - name: Configure Docker
        run: gcloud auth configure-docker europe-west2-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          docker build -t europe-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/askwise-artifacts/askwise-backend ./backend
          docker push europe-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/askwise-artifacts/askwise-backend

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy askwise-backend \
            --image europe-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/askwise-artifacts/askwise-backend \
            --platform managed \
            --region us-central1 \
            --project ${{ secrets.GCP_PROJECT_ID }} \
            --allow-unauthenticated \
            --port 8080

      # -------------------------------
      # FRONTEND: Build & Deploy to Firebase Hosting
      # -------------------------------
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Build Frontend
        run: npm run build
        working-directory: ./frontend

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase Hosting
        run: firebase deploy --only hosting --token ${{ secrets.FIREBASE_TOKEN }}
        working-directory: ./frontend
